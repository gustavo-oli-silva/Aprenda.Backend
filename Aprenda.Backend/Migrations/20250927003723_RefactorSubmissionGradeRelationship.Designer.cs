// <auto-generated />
using System;
using Aprenda.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aprenda.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250927003723_RefactorSubmissionGradeRelationship")]
    partial class RefactorSubmissionGradeRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aprenda.Backend.Models.Archive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("SizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("StoredName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("StoredName")
                        .IsUnique();

                    b.HasIndex("SubmissionId");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Classroom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BannerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IconId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BannerId");

                    b.HasIndex("IconId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId")
                        .IsUnique();

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClassroomId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<string>("PostType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasDiscriminator<string>("PostType").HasValue("Post");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Submission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkId");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AvatarId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Profile")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.Property<long>("ClassroomsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("ClassroomsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserClassrooms", (string)null);
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Homework", b =>
                {
                    b.HasBaseType("Aprenda.Backend.Models.Post");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Homework");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Archive", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Post", null)
                        .WithMany("Archives")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Aprenda.Backend.Models.Submission", null)
                        .WithMany("Archives")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Classroom", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Archive", "Banner")
                        .WithMany()
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Aprenda.Backend.Models.Archive", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Banner");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Grade", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Submission", "Submission")
                        .WithOne("Grade")
                        .HasForeignKey("Aprenda.Backend.Models.Grade", "SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Post", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Classroom", "Classroom")
                        .WithMany("Posts")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aprenda.Backend.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Submission", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Homework", "Homework")
                        .WithMany("Submissions")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aprenda.Backend.Models.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Homework");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.User", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Archive", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.HasOne("Aprenda.Backend.Models.Classroom", null)
                        .WithMany()
                        .HasForeignKey("ClassroomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aprenda.Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Classroom", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Post", b =>
                {
                    b.Navigation("Archives");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Submission", b =>
                {
                    b.Navigation("Archives");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("Aprenda.Backend.Models.Homework", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
